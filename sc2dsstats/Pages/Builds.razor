@page "/builds"
@using System.ComponentModel
@using sc2dsstats.Data
@using sc2dsstats.Interfaces
@using System.Globalization;
@using pax.s2decode.Models;
@inject ChartService _chart
@inject ChartStateChange chartChanged
@inject DSdyn_filteroptions  _options
@inject IDSdata_cache _DSdata
@inject ChartStateChange chartChanged
@inject BuildsService _build
@implements IDisposable

<div class="container-fluid">
    <div class="row">
        <div class="form-group mr-2">
            <label class="label label-default">
                Build
            </label>
            <select class="browser-default custom-select" id="chb_mode" name="chb_mode" @bind="@_options.Build">
                <option value="ALL">all</option>
                <option value="player" selected="selected">player</option>
            </select>

        </div>
        <div class="form-group mr-2">
            <label class="label label-default">
                Compare
            </label>
            <select class="browser-default custom-select" id="chb_mode" name="chb_mode" @bind="@options.BUILD_COMPARE">
                <option value="" selected="selected"></option>
                <option value="ALL">all</option>
                <option value="player">player</option>
            </select>

        </div>
        <div class="form-group mr-2">
            <label class="label label-default">
                Cmdr
            </label>
            <select class="browser-default custom-select" id="chb_mode" name="chb_mode" @bind="@options.CMDR">
                @foreach (string cmdr in DSdata.s_races)
                {
                    @if (@cmdr == "Abathur")
                    {
                        <option selected="selected">@cmdr</option>
                    }
                    else
                    {
                        <option>@cmdr</option>
                    }
                }
            </select>

        </div>
        <div class="form-group mr-2">
            <label class="label label-default">
                vs Cmdr
            </label>
            <select class="browser-default custom-select" id="chb_mode" name="chb_mode" @bind="@options.CMDR_VS">
                <option selected="selected">ALL</option>
                @foreach (string cmdr in DSdata.s_races)
                {
                    <option>@cmdr</option>
                }
            </select>

        </div>
        <div class="form-group mr-2">
            <label class="label label-default">
                Breakpoint
            </label>
            <select class="browser-default custom-select" id="chb_mode" name="chb_mode" @bind="@options.BREAKPOINT">
                <option value="MIN5">5min</option>
                <option value="MIN10" selected="selected">10min</option>
                <option value="MIN15">15min</option>
                <option value="ALL">all</option>
            </select>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div>
            <p class="align-content-center"><b>Cmdr</b></p>
            <div>
                @foreach (var ent in DSdata.s_races_cmdr)
                {
                    <div class="custom-control custom-radio">
                        <input type="radio"
                               class="custom-control-input"
                               name="CmdrIcons"
                               value=@ent
                               id="cb_cmdr_@ent"
                               @onchange="@(() => @options.CMDR = @ent)" />
                        <label class="custom-control-label" for="cb_cmdr_@ent">
                            <img alt="img_@ent" longdesc="img_@ent" src="@DSdata.GetIcon(@ent)" width="30" height="30" />
                            @ent
                        </label>
                    </div>
                }
            </div>
        </div>
        <div>
            <p class="align-content-center"><b>Vs</b></p>
            <div>
                @foreach (var ent in DSdata.s_races_cmdr)
                {
                    <div class="custom-control custom-radio">
                        <input type="radio"
                               class="custom-control-input"
                               name="VsIcons"
                               value=@ent
                               id="cb_vs_@ent"
                               @onchange="@(() => @options.CMDR_VS = @ent)" />
                        <label class="custom-control-label" for="cb_vs_@ent">
                            <img alt="img_@ent" longdesc="img_@ent" src="@DSdata.GetIcon(@ent)" width="30" height="30" />
                            @ent
                        </label>
                    </div>
                }
                <div class="custom-control custom-radio">

                    <input type="radio"
                           class="custom-control-input"
                           name="VsIcons"
                           value=All
                           id="rbvs_dummy"
                           @onchange="@(() => @options.CMDR_VS = "ALL")" />
                    <label class="custom-control-label" for="rbvs_dummy">
                        <img alt="img_dummy" longdesc="img_dummy" src="images/dummy.png" width="30" height="30" />
                        All
                    </label>
                </div>
            </div>
        </div>
        <div>
            <div class="row">
                <div class="custom-control custom-radio mr-2">
                    <label class="label label-default">
                        <input type="radio"
                               name="bpIcons"
                               value=All
                               id="rb_5min"
                               @onchange="@(() => @options.BREAKPOINT = "MIN5")" />
                        5min
                    </label>
                </div>
                <div class="custom-control custom-radio mr-2">
                    <label class="label label-default">
                        <input type="radio"
                               name="bpIcons"
                               value=All
                               id="rb_10min"
                               checked="checked"
                               @onchange="@(() => @options.BREAKPOINT = "MIN10")" />
                        10min
                    </label>
                </div>
                <div class="custom-control custom-radio mr-2">
                    <label class="label label-default">
                        <input type="radio"
                               name="bpIcons"
                               value=All
                               id="rb_15min"
                               @onchange="@(() => @options.BREAKPOINT = "MIN15")" />
                        15min
                    </label>
                </div>
                <div class="custom-control custom-radio mr-2">
                    <label class="label label-default">
                        <input type="radio"
                               name="bpIcons"
                               value=All
                               id="rb_all"
                               @onchange="@(() => @options.BREAKPOINT = "ALL")" />
                        all
                    </label>
                </div>
                <!--
    <div>
        <p style="margin-left: 5px;">
            <button class="btn btn-secondary" @onclick="@ShowDatabase">Game details</button>
        </p>
    </div>
        -->
            </div>
            <div>
                <div class="mt-5, ml-5">
                    @if (options.BREAKPOINT == "ALL")
                    {
                        <h3>
                            <font color="@DSdata.color_info">
                                @BUILD's average unit count for <font color="@DSdata.color_max1">@CMDR</font>  at the end of the game @COMP
                            </font>
                        </h3>

                    }
                    else
                    {
                        <h3>
                            <font color="@DSdata.color_info">
                                @BUILD's average unit count for <font color="@DSdata.color_max1">@CMDR</font>  after @options.BREAKPOINT @COMP
                            </font>
                        </h3>
                    }
                    <div class="row">
                        <div class="mr-3">
                            <table class="table table-sm table-hover table-dark">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Replays (@skip-@(take + skip)))</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (!_DSdata.BUILDREPLAYSCACHE.ContainsKey(_options.Build))
                                    {
                                        <tr><th>Loading ...</th></tr>
                                    }
                                    else
                                    {
                                        @foreach (var ent in _DSdata.BUILDREPLAYSCACHE[_options.Build][options.CMDR][options.CMDR_VS].OrderByDescending(o => o.GAMETIME).Skip(skip).Take(take))
                                        {
                                            @if (replay_id == ent.ID)
                                            {
                                                <tr class="table-info table-row sort-link" @onclick="@(() => ShowGame(@ent.ID))">

                                                    <th scope="row">@ent.ID</th>
                                                    <td>@ent.GAMETIME.ToString().Substring(0, 8)</td>
                                                </tr>

                                            }
                                            else
                                            {
                                                <tr class="table-row sort-link" @onclick="@(() => ShowGame(@ent.ID))">

                                                    <th scope="row">@ent.ID</th>
                                                    <td>@ent.GAMETIME.ToString().Substring(0, 8)</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                            <div class="row">
                                <button class="btn btn-sm mr-1" @onclick="@Skip">&lt&lt</button>
                                <button class="btn btn-sm" @onclick="@Take">&gt&gt</button>
                            </div>
                        </div>
                        <div>
                            <table class="table table-sm table-dark box-layout">
                                <thead>
                                    <tr><th>Unit</th><th>Count</th></tr>
                                </thead>
                                <!--
                                <tr class="table-primary"><td><font color="@DSdata.color_info">WR: @INFO_CMDR["Winrate"] % Games: @INFO_CMDR["Games"]</font></td><td><font color="@DSdata.color_info">@DUR_CMDR</font></td></tr>
                                    -->
                                <tr>
                                    <td>
                                        <span class="badge badge-danger">
                                            WR @INFO_CMDR["Winrate"]% Games: @INFO_CMDR["Games"]
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge badge-danger">
                                            @DUR_CMDR
                                        </span>
                                    </td>
                                </tr>
                                @foreach (var ent in UNITS)
                                {
                                    @if (@ent.Value >= cmax1)
                                    {
                                        <tr><td><font color="@DSdata.color_max1">@ent.Key</font></td><td><font color="@DSdata.color_max1">@ent.Value.ToString("0.00")</font></td></tr>
                                    }
                                    else if (@ent.Value >= cmax2)
                                    {
                                        <tr><td><font color="@DSdata.color_max2">@ent.Key</font></td><td><font color="@DSdata.color_max2">@ent.Value.ToString("0.00")</font></td></tr>
                                    }
                                    else if (@ent.Value >= cmax3)
                                    {
                                        <tr><td><font color="@DSdata.color_max3">@ent.Key</font></td><td><font color="@DSdata.color_max3">@ent.Value.ToString("0.00")</font></td></tr>
                                    }
                                    else
                                    {
                                        <tr><td>@ent.Key</td><td>@ent.Value.ToString("0.00")</td></tr>
                                    }
                                }
                            </table>
                        </div>

                        @if (@options.BUILD_COMPARE != "")
                        {
                            <div class="ml-2 mr-2">
                                <table class="table table-sm table-dark box-layout">
                                    <thead>
                                        <tr><th>Diff</th></tr>
                                    </thead>
                                    @if (@INFO_DIFF < 0)
                                    {
                                        <tr><td><font color="@DSdata.color_diff1">@INFO_DIFF.ToString("0.00")</font></td></tr>
                                    }
                                    else if (@INFO_DIFF > 0)
                                    {
                                        <tr><td><font color="@DSdata.color_diff2">@INFO_DIFF.ToString("0.00")</font></td></tr>
                                    }
                                    else
                                    {
                                        <tr><td><font color="@DSdata.color_null">@INFO_DIFF.ToString("0.00")</font></td></tr>
                                    }
                                    @foreach (var ent in DIFF)
                                    {
                                        @if (ent < 0)
                                        {
                                            <tr><td><font color="@DSdata.color_diff1">@ent.ToString("0.00")</font></td></tr>
                                        }
                                        else if (ent > 0)
                                        {
                                            <tr><td><font color="@DSdata.color_diff2">@ent.ToString("0.00")</font></td></tr>
                                        }
                                        else
                                        {
                                            <tr><td><font color="@DSdata.color_null">@ent.ToString("0.00")</font></td></tr>
                                        }

                                    }
                                </table>
                            </div>
                            <div>
                                <table class="table table-sm table-dark box-layout">
                                    <thead>
                                        <tr><th>Unit</th><th>Count</th></tr>
                                    </thead>
                                    <!--
    <tr class="table-primary"><td><font color="@DSdata.color_info">WR: @INFO_CMDR_VS["Winrate"] % Games: @INFO_CMDR_VS["Games"]</font></td><td><font color="@DSdata.color_info">@DUR_CMDR_VS</font></td></tr>
    -->
                                    <tr>
                                        <td>
                                            <span class="badge badge-danger">
                                                WR @INFO_CMDR_VS["Winrate"]% Games: @INFO_CMDR_VS["Games"]
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge badge-danger">
                                                @DUR_CMDR_VS
                                            </span>
                                        </td>
                                    </tr>
                                    @foreach (var ent in UNITS_VS)
                                    {
                                        @if (@ent.Value >= vmax1)
                                        {
                                            <tr><td><font color="@DSdata.color_max1">@ent.Key</font></td><td><font color="@DSdata.color_max1">@ent.Value.ToString("0.00")</font></td></tr>
                                        }
                                        else if (@ent.Value >= vmax2)
                                        {
                                            <tr><td><font color="@DSdata.color_max2">@ent.Key</font></td><td><font color="@DSdata.color_max2">@ent.Value.ToString("0.00")</font></td></tr>
                                        }
                                        else if (@ent.Value >= vmax3)
                                        {
                                            <tr><td><font color="@DSdata.color_max3">@ent.Key</font></td><td><font color="@DSdata.color_max3">@ent.Value.ToString("0.00")</font></td></tr>
                                        }
                                        else
                                        {
                                            <tr><td>@ent.Key</td><td>@ent.Value.ToString("0.00")</td></tr>
                                        }
                                    }
                                </table>
                            </div>
                            <div class="ml-3">
                                <table class="table table-sm table-hover table-dark">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Replays (@skip_vs-(@(take + skip_vs)))</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (!_DSdata.BUILDREPLAYSCACHE.ContainsKey(options.BUILD_COMPARE))
                                        {
                                            <tr><th>Loading ...</th></tr>
                                        }
                                        else
                                        {
                                            @foreach (var ent in _DSdata.BUILDREPLAYSCACHE[options.BUILD_COMPARE][options.CMDR][options.CMDR_VS].OrderByDescending(o => o.GAMETIME).Skip(skip_vs).Take(take))
                                            {
                                                @if (replay_id == ent.ID)
                                                {
                                                    <tr class="table-info table-row sort-link" @onclick="@(() => ShowGame_vs(@ent.ID))">

                                                        <th scope="row">@ent.ID</th>
                                                        <td>@ent.GAMETIME.ToString().Substring(0, 8)</td>
                                                    </tr>

                                                }
                                                else
                                                {
                                                    <tr class="table-row sort-link" @onclick="@(() => ShowGame_vs(@ent.ID))">

                                                        <th scope="row">@ent.ID</th>
                                                        <td>@ent.GAMETIME.ToString().Substring(0, 8)</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                                <div class="row">
                                    <button class="btn btn-sm mr-1" @onclick="@Skip_vs">&lt&lt</button>
                                    <button class="btn btn-sm" @onclick="@Take_vs">&gt&gt</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid @GameClass">
    <Game replay="replay" />
</div>
<!--
@if (@database == true)
{
    <div>
        <Database2 />
    </div>
}
-->
<br />
<br />
<div id="dv_info" align="left" style="position: inherit; left: 10px; width: 1011px; margin-left: 10px; overflow: hidden">
    <div id="dv_info1" style="width: 400px; float: left">
        <p>@DSdata.INFO["Builds"]</p>
    </div>
    <div id="dv_info2" style="width: 600px; font-size: 12px; overflow: hidden; left: 10px; float: left">
        <p></p>
    </div>
</div>


@code {
    private DSdyn_buildoptions options { get; set; }
    private IEnumerable<KeyValuePair<string, double>> UNITS { get; set; }
    private IEnumerable<double> DIFF { get; set; }
    private IEnumerable<KeyValuePair<string, double>> UNITS_VS { get; set; }
    private Dictionary<string, double> INFO_CMDR { get; set; }
    private Dictionary<string, double> INFO_CMDR_VS { get; set; }
    private double INFO_DIFF = 0;
    private string DUR_CMDR = "";
    private string DUR_CMDR_VS = "";
    private string BUILD = "";
    private string CMDR = "";
    private string COMP = "";
    private string TEMPCOLOR = "";
    private double cmax1 = 0;
    private double cmax2 = 0;
    private double cmax3 = 0;
    private double vmax1 = 0;
    private double vmax2 = 0;
    private double vmax3 = 0;
    private DSdyn dyncmdr = new DSdyn();
    private DSdyn dynvs = new DSdyn();
    private bool database = false;
    private int id = 0;
    private string GameClass = "colapsed";
    private dsreplay replay;
    private int replay_id = 0;
    int skip = 0;
    int skip_vs = 0;
    int take = 12;

    void ShowDatabase()
    {
        chartChanged.Fil = _options.fil;
        chartChanged.Update = !chartChanged.Update;
        database = !database;
    }


    protected override async Task OnInitializedAsync()
    {
        CultureInfo.CurrentCulture = CultureInfo.CreateSpecificCulture("en-US");

        List<KeyValuePair<string, double>> _UNITS = new List<KeyValuePair<string, double>>();
        List<KeyValuePair<string, double>> _UNITS_VS = new List<KeyValuePair<string, double>>();
        List<double> _DIFF = new List<double>();
        UNITS = _UNITS;
        DIFF = _DIFF;
        UNITS_VS = _UNITS_VS;

        INFO_CMDR = new Dictionary<string, double>();
        INFO_CMDR.Add("Winrate", 0);
        INFO_CMDR.Add("Games", 0);
        INFO_CMDR.Add("Duration", 0);
        INFO_CMDR_VS = new Dictionary<string, double>();
        INFO_CMDR_VS.Add("Winrate", 0);
        INFO_CMDR_VS.Add("Games", 0);
        INFO_CMDR_VS.Add("Duration", 0);
        INFO_DIFF = 0;
        BUILD = "player";
        DUR_CMDR = "";
        DUR_CMDR_VS = "";
        CMDR = "Abathur";
        COMP = "";

        options = new DSdyn_buildoptions();
        options.BUILD = "player";
        options.CMDR = "Abathur";
        options.CMDR_VS = "ALL";
        options.BUILD_COMPARE = "";
        options.BREAKPOINT = "MIN10";

        _options.DOIT = false;
        _build.DefaultFilter();
        _options.Player = true;
        _options.Build = options.BUILD;
        _options.Vs = options.CMDR_VS;
        _options.DOIT = true;
        _options.Interest = options.CMDR;

        await _DSdata.InitBuilds();

        _options.PropertyChanged += FilOptionChanged;
        options.PropertyChanged += OptionChanged;
        OptionChanged(null, null);
    }

    public void ShowGame(int repid) {
        GameClass = "null";
        replay = _DSdata.BUILDREPLAYSCACHE[_options.Build][options.CMDR][options.CMDR_VS].Where(x => x.ID == repid).ToArray()[0];
        replay_id = repid;
    }

    public void ShowGame_vs(int repid) {
        GameClass = "null";
        replay = _DSdata.BUILDREPLAYSCACHE[options.BUILD_COMPARE][options.CMDR][options.CMDR_VS].Where(x => x.ID == repid).ToArray()[0];
        replay_id = repid;
    }

    void Skip()
    {
        skip -= 12;
        if (skip < 0 || take < 0)
        {
            skip = 0;
            take = 12;
        }
    }

    void Take()
    {
        skip += 12;
    }

    void Skip_vs()
    {
        skip_vs -= 12;
        if (skip_vs < 0 || take < 0)
        {
            skip = 0;
            take = 12;
        }
    }

    void Take_vs()
    {
        skip_vs += 12;
    }

    public void OptionChange()
    {
        OptionChanged(null, null);
    }

    private void FilOptionChanged(object sender, PropertyChangedEventArgs e)
    {
        if (_options.DOIT == true && e.PropertyName == "Build")
        {
            options.BUILD = _options.Build;
        }
        StateHasChanged();
    }

    private void OptionChanged(object sender, PropertyChangedEventArgs e)
    {
        if (e != null && (e.PropertyName =="CMDR" || e.PropertyName == "CMDR_VS")) {
            skip = 0;
            skip_vs = 0;
        }

        CultureInfo.CurrentCulture = CultureInfo.CreateSpecificCulture("en-US");
        string bp = options.BREAKPOINT;
        string build = _options.Build;
        List<KeyValuePair<string, double>> temp = new List<KeyValuePair<string, double>>(
            _DSdata.BUILDCACHE[build][options.CMDR][options.CMDR_VS][bp].OrderByDescending(o => o.Value).ToList()
        );

        KeyValuePair<string, double> Gas = new KeyValuePair<string, double>();
        KeyValuePair<string, double> Mid = new KeyValuePair<string, double>();
        KeyValuePair<string, double> Upgrades = new KeyValuePair<string, double>();

        Gas = temp.Where(o => o.Key == "Gas").FirstOrDefault();
        Mid = temp.Where(o => o.Key == "Mid").FirstOrDefault();
        Upgrades = temp.Where(o => o.Key == "Upgrades").FirstOrDefault();

        temp.Remove(Gas);
        temp.Remove(Mid);
        temp.Remove(Upgrades);

        cmax1 = 100;
        cmax2 = 100;
        cmax3 = 100;
        if (temp.Count > 3)
        {
            cmax1 = temp.ElementAt(0).Value;
            cmax2 = temp.ElementAt(1).Value;
            cmax3 = temp.ElementAt(2).Value;
        }
        UNITS = temp;

        INFO_CMDR["Winrate"] = _DSdata.BUILDWRCACHE[build][options.CMDR][options.CMDR_VS][bp].Key;
        INFO_CMDR["Games"] = _DSdata.BUILDWRCACHE[build][options.CMDR][options.CMDR_VS][bp].Value;
        double dur = _DSdata.BUILDDURCACHE[build][options.CMDR][options.CMDR_VS][bp];
        TimeSpan t = TimeSpan.FromSeconds(dur);
        DUR_CMDR = '\u2300'.ToString() + " " + t.Minutes + ":" + t.Seconds.ToString("D2") + "min";
        CMDR = options.CMDR;
        if (options.CMDR_VS != "ALL") { CMDR += " vs " + options.CMDR_VS; }
        BUILD = build;


        if (options.BUILD_COMPARE != "")
        {
            List<double> diff = new List<double>();
            Dictionary<string, double> units_vs = new Dictionary<string, double>();
            string build_vs = options.BUILD_COMPARE;

            COMP = "compared to " + build_vs;
            foreach (var ent in UNITS)
            {
                if (_DSdata.BUILDCACHE[build_vs][options.CMDR][options.CMDR_VS][bp] != null)
                {
                    var uv = _DSdata.BUILDCACHE[build_vs][options.CMDR][options.CMDR_VS][bp].Where(w => w.Key == ent.Key).ToList();
                    double c = 0;
                    if (uv.Count > 0) { c = uv.ElementAt(0).Value; }
                    units_vs.Add(ent.Key, c);
                    diff.Add(ent.Value - c);
                }
            }

            DIFF = diff;

            int i = 0;
            vmax1 = 100;
            vmax2 = 100;
            vmax3 = 100;
            foreach (var ent in _DSdata.BUILDCACHE[build_vs][options.CMDR][options.CMDR_VS][bp].OrderByDescending(o => o.Value))
            {
                if (ent.Key == "Gas" || ent.Key == "Mid" || ent.Key == "Upgrades") continue;
                i++;
                if (i == 1) { vmax1 = ent.Value; }
                if (i == 2) { vmax2 = ent.Value; }
                if (i == 3) { vmax3 = ent.Value; }
                var uv = _DSdata.BUILDCACHE[build][options.CMDR][options.CMDR_VS][bp].Where(w => w.Key == ent.Key).ToList();
                double c = 0;
                if (uv.Count > 0) { c = uv.ElementAt(0).Value; }
                else
                {
                    units_vs.Add(ent.Key, ent.Value);
                }
            }

            UNITS_VS = units_vs;

            INFO_CMDR_VS["Winrate"] = _DSdata.BUILDWRCACHE[build_vs][options.CMDR][options.CMDR_VS][bp].Key;
            INFO_CMDR_VS["Games"] = _DSdata.BUILDWRCACHE[build_vs][options.CMDR][options.CMDR_VS][bp].Value;
            double vdur = _DSdata.BUILDDURCACHE[build_vs][options.CMDR][options.CMDR_VS][bp];
            TimeSpan vt = TimeSpan.FromSeconds(vdur);
            DUR_CMDR_VS = '\u2300'.ToString() + " " + vt.Minutes + ":" + vt.Seconds.ToString("D2") + "min";
            INFO_DIFF = INFO_CMDR["Winrate"] - INFO_CMDR_VS["Winrate"];
        }
        _options.Build = build;
        _options.Interest = options.CMDR;
        _options.Vs = options.CMDR_VS;

        //chartChanged.Fil = _options.fil;
        //chartChanged.Update = !chartChanged.Update;

    }

    public void Dispose()
    {
        _options.PropertyChanged -= FilOptionChanged;
        options.PropertyChanged -= OptionChanged;
    }
}
