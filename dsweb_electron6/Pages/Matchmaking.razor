@page "/mm"
@using dsweb_electron6.Models
@using dsweb_electron6.Data;
@using System.Threading;
@inject StartUp _startUp
@inject MMservice _mm

<h3>Matchmaking</h3>
<br />
@if (_startUp.Conf.MMcredential == false)
{
    <div class="row">
        <div class="custom-control custom-checkbox w-25">
            <input type="checkbox" class="custom-control-input" name="cb_mm_credential" id="cb_mm_credential" @bind="@_startUp.Conf.MMcredential" />
            <label class="custom-control-label" for="cb_mm_credential">Allow Matchmaking</label>
        </div>
        <div class="w-auto">
            <label>
                By using this matchmaking system you agree, that your SC2-username and skill information will be stored to generate the games
                and show rankings on <a href="https://www.pax77.org/dsweb/ladder">https://www.pax77.org/dsweb/ladder</a>.
                <br />
                The data will not be used for any other purpose and will not be disclosed to third parties.
                You can decline to the agreement at any time by unchecking the Credential and delete all data with the <a href="config">Deleteme</a> button.
            </label>
        </div>
    </div>
}
else if (MMDeleted == true)
{
    <div class="jumbotron">
        Deleted. You will be able to rejoin the mm-system in @(MMDel - 3) days.
    </div>
}

else
{

    <div class="container-fluid">
        <div class="row">
            <div>
                <div class="btn-group-vertical" role="group">
                    <button class="btn btn-primary btn-sm mb-2" disabled="@isFindDisabled" @onclick="@Findgame">Find game</button>
                    <button class="btn btn-primary btn-sm mb-2" @onclick="@Reportgame">Report game</button>
                    <button class="btn btn-primary btn-sm mb-2" @onclick="@Exitfind">Exit</button>
                </div>
                <div class="d-flex flex-column">
                    <label for="mymu">My rating:</label>
                    <h4>
                        <span class="badge badge-info border border-info mr-2" style="min-width: 75px;" id="mymu">
                            @Math.Round(_mm.MyELO, 2)
                        </span>
                    </h4>
                </div>
            </div>
            <div>
                <form class="form-inline ml-4">
                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="seplayer" class="control-label">
                                Player:
                            </label>
                            <div>
                                <select id="seplayer" class="form-control" @bind="@seplayer.Name">
                                    @foreach (var opt in _startUp.Conf.Players)
                                    {
                                        <option value=@opt>@opt</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="semode" class="control-label">
                                Mode:
                            </label>
                            <div>
                                <select id="semode" class="form-control" @bind="@seplayer.Mode">
                                    <option selected="selected">Commander</option>
                                    <option>Standard</option>
                                </select>
                                <select id="semode2" class="form-control" @bind="@seplayer.Mode2">
                                    <option selected="selected">3v3</option>
                                    <option>2v2</option>
                                    <option>1v1</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="seserver" class="control-label">
                                Server:
                            </label>
                            <div>
                                <select id="seserver" class="form-control" @bind="@seplayer.Server">
                                    <option selected="selected">NA</option>
                                    <option>EU</option>
                                    <option>KOR</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mr-2 @_mm.RandomIsDisabled">
                        <input type="checkbox" name="serandom" id="serandom" @bind="@seplayer.Random" />
                        <label for="serandom" class="control-label">allow Randoms</label>
                    </div>
                </form>
                <br />
                <div class="row ml-5">
                    <div>
                        <h4>
                            <span class="badge @_mm.Serverbadge border border-info mr-2">
                                @_mm.Serverinfo
                            </span>
                        </h4>
                    </div>
                    <div>
                        <h4>
                            <span class="badge badge-secondary border border-info mr-2">
                                @_mm._time.ToString(@"hh\:mm\:ss")
                            </span>
                        </h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-auto">
                <form>
                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="mmid" class="control-label">MMID:</label>
                            <h4>
                                <span class="badge badge-light" style="min-width: 50px;" id="mmid">
                                    @_mm.MMID
                                </span>
                            </h4>
                        </div>
                    </div>

                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="gameserver" class="control-label">Server:</label>
                            <h4>
                                <span class="badge badge-light" style="min-width: 50px;" id="gameserver">
                                    @_mm.Server
                                </span>
                            </h4>
                        </div>
                    </div>
                    <br />
                    <div class="form-group mr-2">
                        <div class="d-flex flex-column">
                            <label for="reports" class="control-label">
                                Reports:
                            </label>
                            <select id="reports" class="form-control" disabled="@RepSelDisabled" @bind="@repid">
                                @for (int i = 0; i < _mm.DSGameReport.Keys.Count(); i++)
                                {
                                    @if (i == _mm.DSGameReport.Keys.Count() - 1)
                                    {
                                        <option selected="selected" value="@_mm.DSGameReport.Keys.ElementAt(i)">@_mm.DSGameReport.Keys.ElementAt(i)</option>
                                    }
                                    else
                                    {
                                        <option value="@_mm.DSGameReport.Keys.ElementAt(i)">@_mm.DSGameReport.Keys.ElementAt(i)</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-auto">
                <h5>Team1</h5>
                <table class="table table-sm table-dark table-hover">
                    <thead>
                        <tr><th>Player</th><th>Name</th><th>Exp</th></tr>
                    </thead>
                    <tbody>
                        @if (repid == 0)
                        {
                        @for (int i = 0; i < 3; i++)
                        {
                            <tr>
                                <td>Player @(i + 1)</td>
                                @if (_mm.Game.Team1 != null && _mm.Game.Team1.Count > i)
                                {
                                    <td>@_mm.Game.Team1[i].Name</td>
                        }
                        else
                        {
                                    <td></td>
                        }
                                <td></td>
                            </tr>
                        }
                        } else
                        {
                            @for (int i = 0; i < _mm.MMGameReport[repid].Team1.Count(); i++)
                            {
                                var plf = _mm.MMGameReady[repid].Team1[i];
                                var plr = _mm.MMGameReport[repid].Team1[i];
                                var color = DSdata.color_null;
                                var diff = Math.Round(plf.EXP - plr.EXP, 2);
                                if (diff > 0)
                                {
                                    color = DSdata.color_diff2;
                                } else if (diff < 0)
                                {
                                    color = DSdata.color_diff1;
                                }
                                <tr>
                                    <td>Player @(i+1)</td>
                                    <td>@plf.Name</td>
                                    <td>@Math.Round(plf.EXP, 2) <font color="@color">@diff</font></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-auto">
                <h5>Team2</h5>
                <table class="table table-sm table-dark table-hover">
                    <thead>
                        <tr><th>Player</th><th>Name</th><th>Exp</th></tr>
                    </thead>
                    <tbody>
                        @if (repid == 0)
                        {
                            @for (int i = 0; i < 3; i++)
                            {
                                <tr>
                                    <td>Player @(i + 1 + 3)</td>
                                    @if (_mm.Game.Team2 != null && _mm.Game.Team2.Count > i)
                                    {
                                        <td>@_mm.Game.Team2[i].Name</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                </tr>
                            }
                        }
                        else
                        {
                            @for (int i = 0; i < _mm.MMGameReport[repid].Team2.Count(); i++)
                            {
                                var plr = _mm.MMGameReport[repid].Team2[i];
                                var plf = _mm.MMGameReady[repid].Players().Where(x => x.Name == plr.Name).FirstOrDefault();
                                
                                var color = DSdata.color_null;
                                var diff = Math.Round(plf.EXP - plr.EXP, 2);
                                if (diff > 0)
                                {
                                    color = DSdata.color_diff2;
                                }
                                else if (diff < 0)
                                {
                                    color = DSdata.color_diff1;
                                }
                                <tr>
                                    <td>Player @(i + 1)</td>
                                    <td>@plr.Name</td>
                                    <td>@Math.Round(plf.EXP, 2) <font color="@color">@diff</font></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>


                <!--
                <div class="d-flex flex-column">
                    <h5>Team2</h5>
                    <h3><span class="badge badge-primary">Player1</span></h3>
                    <h4><span class="badge badge-secondary ml-3 mb-2">Info1</span></h4>
                    <h3><span class="badge badge-primary">Player2</span></h3>
                    <h4><span class="badge badge-secondary ml-3 mb-2">Info2</span></h4>
                    <h3><span class="badge badge-primary">Player3</span></h3>
                    <h4><span class="badge badge-secondary ml-3 mb-2">Info3</span></h4>
                </div>
                    -->
            </div>

            <div class="col-auto">
                <div class="d-flex flex-column">
                    <h4>Lobby</h4>
                    <table class="table table-sm table-dark table-hover">
                        <thead>
                            <tr><th>Name</th><th>Accepted</th></tr>
                        </thead>
                        <tbody>
                            @foreach (var ent in _mm.Lobby.Keys.Take(6))
                            {
                                <tr>
                                    <td>@ent</td>
                                    <td>@_mm.Lobby[ent]</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <br />
    @if (_mm.GAMEFOUND == true)
    {
<div class="mb-2">
    <button type="button" class="btn btn-success mt-1 mr-2" disabled="@isAcceptDisabled" @onclick="@Acceptgame">Accept</button>
    <button type="button" class="btn btn-danger btn-sm mt-1 mr-2" disabled="@isDeclinedDisabled" @onclick="@Declinegame">decline</button>
    <div class="row mt-2 mb-2">
        @if (_mm.preGame != null)
        {
        @foreach (var pl in _mm.preGame.Players())
        {
            <div class="col-auto">
                @if (pl.Accepted == true)
                {
                <h4><span class="badge badge-success" style="min-width: 55px;">@pl.Name</span></h4>
        }
        else
        {
            <h4><span class="badge badge-info">@pl.Name</span></h4>
        }
            </div>
        }
        }
    </div>
    <div class="jumbotron w-75">
        <h5>Game Found!</h5>
        <div class="ml-2" id="div_progbargf">
            <div class="progress">
                <div class="progress-bar progress-bar-striped" role="progressbar"
                     style="width: @((int)_mm.Done)%" aria-valuenow=@_mm.Done
                     aria-valuemin="0" aria-valuemax="100">
                </div>
            </div>

        </div>
        @if (_mm.ACCEPTED == true)
        {
            <div>
                TY! Waiting for the other players to accept ..
            </div>
        }
    </div>
</div>
    }
    <div class="jumbotron w-75">
        @_mm.Info
    </div>
    <br />
    @if (repid > 0)
    {
        <div class="container-fluid">
            <Game replay="@_mm.DSGameReport[repid]" />
        </div>
    }
}


@code {
    SEplayer seplayer = new SEplayer();
    dsreplay replay;
    double Done = 24;
    string Info = "";
    bool isFindDisabled = false;
    bool isDeclinedDisabled = false;
    bool isAcceptDisabled = false;
    bool MMDeleted = false;
    double MMDel = 3;
    private string GameClass = "colapsed";
    int repid = 0;
    int dd = 0;
    bool RepSelDisabled = true;
    bool UpdateRunning = false;

    protected override void OnInit()
    {
        if (_mm.seplayer != null)
        {
            seplayer = _mm.seplayer;
        }
        seplayer.Name = _startUp.Conf.Players.First();

        MMDel = DateTime.Now.Subtract(_startUp.Conf.MMDeleted).TotalDays;
        if (MMDel < 3)
        {
            MMDeleted = true;
        }
    }

    void Findgame()
    {
        _mm.Reset();
        repid = 0;
        RepSelDisabled = true;
        isFindDisabled = true;
        isDeclinedDisabled = false;
        isDeclinedDisabled = false;
        _mm.FindGame(seplayer);

        Update();
    }

    void Update()
    {
        UpdateRunning = true;
        Task.Run(() =>
        {
            Thread.Sleep(3000);
            while (_mm.SEARCHING == true)
            {
                Thread.Sleep(2000);
                Invoke(() =>
                {
                    StateHasChanged();
                });
            }
            UpdateRunning = false;
            while (_mm.GAMEFOUND == true)
            {
                Thread.Sleep(1000);
                Invoke(() =>
                {
                    StateHasChanged();
                });
            }

            // someone declined - searching again
            if (_mm.SEARCHING == true && UpdateRunning == false)
            {
                isAcceptDisabled = false;
                isDeclinedDisabled = false;
                Update();
            }
            
        });
    }

    void ConnectionLost()
    {

    }

    void Reportgame()
    {
        isFindDisabled = false;
        RepSelDisabled = false;
        _mm.FindValidReps();

        if (_mm.DSGameReport.Count > 0)
        {
            repid = _mm.DSGameReport.Keys.OrderByDescending(o => o).First();
        }
    }

    void Exitfind()
    {
        isFindDisabled = false;
        _mm.Exit(seplayer.Name);
    }

    void Gamefound()
    {
        _mm.GAMEFOUND = true;
        Info = "Game found!";
    }

    void Acceptgame()
    {
        if (_mm.ACCEPTED == false)
        {
            isAcceptDisabled = true;
            isDeclinedDisabled = true;
            _mm.Accepted();
            Info = "Game accepted! Waiting for other players ..";
        }
    }

    void Declinegame()
    {
        if (_mm.ACCEPTED == false)
        {
            _mm.Declined();
            Info = "Game declined. :(";


        }
    }

}
